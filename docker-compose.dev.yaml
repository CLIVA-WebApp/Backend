version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: health-access-backend-dev
    ports:
      - "8000:8000"
    environment:
      # Server Configuration
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
      - DEBUG=True
      - APP_ENV=development
      
      # Database Configuration (Supabase PostgreSQL)
      - SUPABASE_USER=${SUPABASE_USER}
      - SUPABASE_PASSWORD=${SUPABASE_PASSWORD}
      - SUPABASE_HOST=${SUPABASE_HOST}
      - SUPABASE_PORT=${SUPABASE_PORT}
      - SUPABASE_DBNAME=${SUPABASE_DBNAME}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      
      # JWT Configuration
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      
      # App URLs
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - BACKEND_URL=${BACKEND_URL:-http://localhost:8000}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:3001}
      
      # Google OAuth
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - ./data:/app/data
      - ./reports:/app/reports
    restart: unless-stopped
    networks:
      - health-access-network
    depends_on:
      - postgres
    command: ["python", "start.py"]

  # PostgreSQL database for local development
  postgres:
    image: postgis/postgis:15-3.3
    container_name: health-access-db-dev
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-health_access_dev}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./setup_postgis.sql:/docker-entrypoint-initdb.d/setup_postgis.sql
    restart: unless-stopped
    networks:
      - health-access-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: health-access-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    networks:
      - health-access-network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: health-access-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@healthaccess.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - health-access-network
    depends_on:
      - postgres

volumes:
  postgres_dev_data:
  redis_dev_data:
  pgadmin_data:

networks:
  health-access-network:
    driver: bridge 