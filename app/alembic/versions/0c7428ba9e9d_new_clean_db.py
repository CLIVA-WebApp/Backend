"""new clean db

Revision ID: 0c7428ba9e9d
Revises: 
Create Date: 2025-07-31 22:08:52.664084

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision = '0c7428ba9e9d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('provinces',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('area_km2', sa.Float(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_provinces_geom', 'provinces', ['geom'], unique=False, postgresql_using='gist')
    # op.create_index(op.f('ix_provinces_id'), 'provinces', ['id'], unique=False)
    # op.create_index(op.f('ix_provinces_name'), 'provinces', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('provider', sa.String(), nullable=True),
    sa.Column('provider_id', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('regencies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('province_id', sa.UUID(), nullable=False),
    sa.Column('area_km2', sa.Float(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.ForeignKeyConstraint(['province_id'], ['provinces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_regencies_geom', 'regencies', ['geom'], unique=False, postgresql_using='gist')
    # op.create_index(op.f('ix_regencies_id'), 'regencies', ['id'], unique=False)
    # op.create_index(op.f('ix_regencies_name'), 'regencies', ['name'], unique=False)
    op.create_table('subdistricts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('regency_id', sa.UUID(), nullable=False),
    sa.Column('population_count', sa.Integer(), nullable=True),
    sa.Column('poverty_level', sa.Float(), nullable=True),
    sa.Column('area_km2', sa.Float(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.ForeignKeyConstraint(['regency_id'], ['regencies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_subdistricts_geom', 'subdistricts', ['geom'], unique=False, postgresql_using='gist')
    # op.create_index(op.f('ix_subdistricts_id'), 'subdistricts', ['id'], unique=False)
    # op.create_index(op.f('ix_subdistricts_name'), 'subdistricts', ['name'], unique=False)
    op.create_table('health_facilities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('PUSKESMAS', 'PUSTU', 'KLINIK', 'RUMAH_SAKIT', name='healthfacilitytype'), nullable=False),
    sa.Column('subdistrict_id', sa.UUID(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.ForeignKeyConstraint(['subdistrict_id'], ['subdistricts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_health_facilities_geom', 'health_facilities', ['geom'], unique=False, postgresql_using='gist')
    # op.create_index(op.f('ix_health_facilities_id'), 'health_facilities', ['id'], unique=False)
    op.create_table('population_points',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('population_count', sa.Float(), nullable=False),
    sa.Column('subdistrict_id', sa.UUID(), nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.ForeignKeyConstraint(['subdistrict_id'], ['subdistricts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_population_points_geom', 'population_points', ['geom'], unique=False, postgresql_using='gist')
    # op.create_index(op.f('ix_population_points_id'), 'population_points', ['id'], unique=False)
    # op.drop_table('spatial_ref_sys')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name=op.f('spatial_ref_sys_srid_check')),
    sa.PrimaryKeyConstraint('srid', name=op.f('spatial_ref_sys_pkey'))
    )
    op.drop_index(op.f('ix_population_points_id'), table_name='population_points')
    op.drop_index('idx_population_points_geom', table_name='population_points', postgresql_using='gist')
    op.drop_table('population_points')
    op.drop_index(op.f('ix_health_facilities_id'), table_name='health_facilities')
    op.drop_index('idx_health_facilities_geom', table_name='health_facilities', postgresql_using='gist')
    op.drop_table('health_facilities')
    op.drop_index(op.f('ix_subdistricts_name'), table_name='subdistricts')
    op.drop_index(op.f('ix_subdistricts_id'), table_name='subdistricts')
    op.drop_index('idx_subdistricts_geom', table_name='subdistricts', postgresql_using='gist')
    op.drop_table('subdistricts')
    op.drop_index(op.f('ix_regencies_name'), table_name='regencies')
    op.drop_index(op.f('ix_regencies_id'), table_name='regencies')
    op.drop_index('idx_regencies_geom', table_name='regencies', postgresql_using='gist')
    op.drop_table('regencies')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_provinces_name'), table_name='provinces')
    op.drop_index(op.f('ix_provinces_id'), table_name='provinces')
    op.drop_index('idx_provinces_geom', table_name='provinces', postgresql_using='gist')
    op.drop_table('provinces')
    # ### end Alembic commands ### 