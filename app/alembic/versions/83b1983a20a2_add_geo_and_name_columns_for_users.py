"""add geo and name columns for users

Revision ID: 83b1983a20a2
Revises: fbe336155635
Create Date: 2025-08-01 11:13:55.197265

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision = '83b1983a20a2'
down_revision = 'fbe336155635'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('spatial_ref_sys')
    # op.create_index(op.f('ix_health_facilities_id'), 'health_facilities', ['id'], unique=False)
    # op.create_index(op.f('ix_population_points_id'), 'population_points', ['id'], unique=False)
    # op.create_index(op.f('ix_provinces_id'), 'provinces', ['id'], unique=False)
    # op.create_index(op.f('ix_provinces_name'), 'provinces', ['name'], unique=False)
    # op.create_index(op.f('ix_provinces_pum_code'), 'provinces', ['pum_code'], unique=True)
    # op.create_index(op.f('ix_regencies_id'), 'regencies', ['id'], unique=False)
    # op.create_index(op.f('ix_regencies_name'), 'regencies', ['name'], unique=False)
    # op.create_index(op.f('ix_regencies_pum_code'), 'regencies', ['pum_code'], unique=True)
    # op.create_index(op.f('ix_subdistricts_id'), 'subdistricts', ['id'], unique=False)
    # op.create_index(op.f('ix_subdistricts_name'), 'subdistricts', ['name'], unique=False)
    # op.create_index(op.f('ix_subdistricts_pum_code'), 'subdistricts', ['pum_code'], unique=True)
    op.add_column('users', sa.Column('first_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('location_geom', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True))
    op.add_column('users', sa.Column('location_address', sa.String(), nullable=True))
    # op.create_index('idx_users_location_geom', 'users', ['location_geom'], unique=False, postgresql_using='gist')
    # op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_users_location_geom', table_name='users', postgresql_using='gist')
    op.drop_column('users', 'location_address')
    op.drop_column('users', 'location_geom')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_index(op.f('ix_subdistricts_pum_code'), table_name='subdistricts')
    op.drop_index(op.f('ix_subdistricts_name'), table_name='subdistricts')
    op.drop_index(op.f('ix_subdistricts_id'), table_name='subdistricts')
    op.drop_index(op.f('ix_regencies_pum_code'), table_name='regencies')
    op.drop_index(op.f('ix_regencies_name'), table_name='regencies')
    op.drop_index(op.f('ix_regencies_id'), table_name='regencies')
    op.drop_index(op.f('ix_provinces_pum_code'), table_name='provinces')
    op.drop_index(op.f('ix_provinces_name'), table_name='provinces')
    op.drop_index(op.f('ix_provinces_id'), table_name='provinces')
    op.drop_index(op.f('ix_population_points_id'), table_name='population_points')
    op.drop_index(op.f('ix_health_facilities_id'), table_name='health_facilities')
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name=op.f('spatial_ref_sys_srid_check')),
    sa.PrimaryKeyConstraint('srid', name=op.f('spatial_ref_sys_pkey'))
    )
    # ### end Alembic commands ### 