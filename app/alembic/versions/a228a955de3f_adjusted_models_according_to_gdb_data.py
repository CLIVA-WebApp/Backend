"""adjusted models according to gdb data

Revision ID: a228a955de3f
Revises: 3a4ffa420ba3
Create Date: 2025-07-30 21:49:59.473662

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision = 'a228a955de3f'
down_revision = '3a4ffa420ba3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('spatial_ref_sys')
    op.create_index(op.f('ix_population_points_id'), 'population_points', ['id'], unique=False)
    op.add_column('provinces', sa.Column('area_km2', sa.Float(), nullable=True))
    op.alter_column('provinces', 'geom',
               existing_type=geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False, _spatial_index_reflected=True),
               type_=geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False),
               existing_nullable=False)
    op.create_index(op.f('ix_provinces_id'), 'provinces', ['id'], unique=False)
    op.create_index(op.f('ix_provinces_name'), 'provinces', ['name'], unique=False)
    op.add_column('regencies', sa.Column('area_km2', sa.Float(), nullable=True))
    op.alter_column('regencies', 'geom',
               existing_type=geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False, _spatial_index_reflected=True),
               type_=geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False),
               existing_nullable=False)
    op.create_index(op.f('ix_regencies_id'), 'regencies', ['id'], unique=False)
    op.create_index(op.f('ix_regencies_name'), 'regencies', ['name'], unique=False)
    op.add_column('subdistricts', sa.Column('area_km2', sa.Float(), nullable=True))
    op.alter_column('subdistricts', 'geom',
               existing_type=geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False, _spatial_index_reflected=True),
               type_=geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False),
               existing_nullable=False)
    op.create_index(op.f('ix_subdistricts_id'), 'subdistricts', ['id'], unique=False)
    op.create_index(op.f('ix_subdistricts_name'), 'subdistricts', ['name'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_subdistricts_name'), table_name='subdistricts')
    op.drop_index(op.f('ix_subdistricts_id'), table_name='subdistricts')
    op.alter_column('subdistricts', 'geom',
               existing_type=geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False),
               type_=geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False, _spatial_index_reflected=True),
               existing_nullable=False)
    op.drop_column('subdistricts', 'area_km2')
    op.drop_index(op.f('ix_regencies_name'), table_name='regencies')
    op.drop_index(op.f('ix_regencies_id'), table_name='regencies')
    op.alter_column('regencies', 'geom',
               existing_type=geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False),
               type_=geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False, _spatial_index_reflected=True),
               existing_nullable=False)
    op.drop_column('regencies', 'area_km2')
    op.drop_index(op.f('ix_provinces_name'), table_name='provinces')
    op.drop_index(op.f('ix_provinces_id'), table_name='provinces')
    op.alter_column('provinces', 'geom',
               existing_type=geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False),
               type_=geoalchemy2.types.Geometry(geometry_type='POLYGON', srid=4326, dimension=2, from_text='ST_GeomFromEWKT', name='geometry', nullable=False, _spatial_index_reflected=True),
               existing_nullable=False)
    op.drop_column('provinces', 'area_km2')
    op.drop_index(op.f('ix_population_points_id'), table_name='population_points')
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('srid > 0 AND srid <= 998999', name=op.f('spatial_ref_sys_srid_check')),
    sa.PrimaryKeyConstraint('srid', name=op.f('spatial_ref_sys_pkey'))
    )
    # ### end Alembic commands ### 